{% include "FileHeader.stencil" %}
{% macro propertyName name %}{{ name|swiftIdentifier:"pretty"|lowerFirstLetter|escapeReservedKeywords|upperWord:"id" }}{% endmacro %}
{% macro enumName name %}{{ name|swiftIdentifier:"pretty"|escapeReservedKeywords|upperWord:"hhtm" }}{% endmacro %}

import Analytics

/**
 {{ name }}

 - **Описание**: {{ description }}
 - **Категория**: {{ category }}
 {% if event.experiment %}
 - **Эксперимент**: [{{ experiment.description }}]({{ experiment.url }})
{% endif %}
 */
struct {{ structName }}: ParametrizedInternalAnalyticsEvent, SlashAnalyticsEvent {

    enum CodingKeys: String, CodingKey {
        {% for parameter in parameters %}
        case {% call propertyName parameter.name %} = "{{ parameter.name }}"
        {% endfor %}
        case hhtmSource
        case hhtmFrom
    }

    {% for parameter in parameters where parameter.oneOf %}
    enum {% call enumName parameter.name %}: String, Encodable {
        {% for oneOf in parameter.oneOf %}
        /// {{ oneOf.description }}
        case {% call propertyName oneOf.name %} = "{{ oneOf.name }}"
        {% if not forloop.last %}

        {% endif %}
        {% endfor %}
    }
    {% endfor %}

    let eventName = "{{ eventName }}"

    let hhtmSource: HHTMSource?
    let hhtmFrom: HHTMFrom?

    {% for parameter in parameters %}
        {% if parameter.description %}
    /// {{ parameter.description }}
        {% endif %}
        {% if parameter.const %}
    let {% call propertyName parameter.name %} = "{{ parameter.const }}"
        {% elif parameter.type %}
    let {% call propertyName parameter.name %}: {{ parameter.type }}
        {% elif parameter.oneOf %}
    let {% call propertyName parameter.name %}: {% call enumName parameter.name %}
        {% endif %}

    {% endfor %}
}
