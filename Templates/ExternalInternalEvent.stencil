{% include "FileHeader.stencil" %}
{% macro propertyName name %}{{ name|swiftIdentifier:"pretty"|lowerFirstLetter|escapeReservedKeywords|upperWord:"id" }}{% endmacro %}
{% macro enumName name %}{{ name|swiftIdentifier:"pretty"|escapeReservedKeywords }}{% endmacro %}
{% set hasParameters %}{% if event.internal.parameters.count > 0 %}true{% else %}{% endif %}{% endset %}
{% set internalAnalyticsEventType %}{% if hasParameters %}ParametrizedInternalAnalyticsEvent{% else %}InternalAnalyticsEvent{% endif %}{% endset %}

{% macro optional nullable %}{% if nullable %}?{% endif %}{% endmacro %}
{% macro parameterValue parameter %}{% if parameter.type.oneOf %}{% call optional parameter.nullable %}.rawValue{% elif parameter.type.const.hhtmSource or parameter.type.type|default:""|hasPrefix:"HHTMSource" %}{% call optional parameter.nullable %}.value{% endif %}{% endmacro %}

import Analytics

/// **Название**: {{ event.name }}
/// **Описание**: {{ event.description }}
/// **Категория**: {{ event.category }}
struct {{ filename }}: {{ internalAnalyticsEventType }}, SlashAnalyticsEvent, UserCategoryEvent {

    {% if hasParameters %}
    enum ParameterKeys: String {
        {% for parameter in event.internal.parameters %}
        case {% call propertyName parameter.name %} = "{{ parameter.name }}"
        {% endfor %}
    }
    {% endif %}

    {% for parameter in event.internal.parameters where parameter.type.oneOf %}
    enum {% call enumName parameter.name %}: String {
        {% for oneOf in parameter.type.oneOf %}
        /// {{ oneOf.description }}
        case {% call propertyName oneOf.name %}
        {% if not forloop.last %}

        {% endif %}
        {% endfor %}
    }
    {% endfor %}

    {% if event.external.label %}
    enum Label: String {
        {% for oneOf in event.external.label.oneOf %}
        /// {{ oneOf.description }}
        case {% call propertyName oneOf.name %}
        {% if not forloop.last %}

        {% endif %}
        {% endfor %}
    }
    {% endif %}

    let eventName = "{{ event.internal.event }}"
    let action = "{{ event.external.action }}"

    {% for parameter in event.internal.parameters where parameter.type.const %}
    /// {{ parameter.description }}
    {% if parameter.type.const.hhtmSource %}
    let {% call propertyName parameter.name %} = HHTMSource.{{ parameter.type.const.hhtmSource }}
    {% else %}
    let {% call propertyName parameter.name %} = "{{ parameter.type.const }}"
    {% endif %}

    {% endfor %}

    {% for parameter in event.internal.parameters where parameter.type.type %}
    /// {{ parameter.description }}
    let {% call propertyName parameter.name %}: {{ parameter.type.type|capitalize|upperWord:"hhtms" }}{% call optional parameter.nullable %}

    {% endfor %}
    {% for parameter in event.internal.parameters where parameter.type.oneOf %}
    /// {{ parameter.description }}
    let {% call propertyName parameter.name %}: {% call enumName parameter.name %}
    {% endfor %}

    {% if event.external.label %}
        {% if event.external.label.oneOf.count == 1 %}
    let label: Label = .{% call propertyName event.external.label.oneOf.0.name %}
        {% else %}
    let label: Label
        {% endif %}
    {% endif %}
    
    let isLoggedIn: Bool

    {% if hasParameters %}
    var parameters: [ParameterKeys: Any?] {
        [
            {% for parameter in event.internal.parameters %}
            .{% call propertyName parameter.name %}: {% call propertyName parameter.name %}{% call parameterValue parameter %}{% if not forloop.last %},{% endif %}
            {% endfor %}
        ]
    }
    {% endif %}
}
