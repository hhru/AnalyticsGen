{% include "FileHeader.stencil" %}
{% set accessModifier %}{% if options.publicAccess %}public{% else %}internal{% endif %}{% endset %}
import Foundation

struct EventContext: Encodable {

	enum Platform: String, Encodable {
	    case android = "Android"
	    case androidIOS = "Android/iOS"
	    case iOS = "iOS"
	}

	struct Internal: Encodable {
		let event: String
		let platform: Platform?
		let sql: String?
	}

	struct ConstantParameter {
		let name: String
		let const: String
		let description: String
	}

	struct DynamicParameter {
		let name: String
		let description: String
		let type: String
	}

	let name: String
	let description: String
	let trackers: [String]
	let eventName: String
	let constantParameters: [ConstParamter]
	let dynamicParameters: [DynamicParameter]
}

/// {{ description }}
{{ accessModifier }} struct {{ name }}: {{ trackers|join:", " }} {

	// MARK: - Instance Properties	

	let eventName = "{{ eventName }}"
{% for parameter in constantParameters %}	
	/// {{ parameter.description }}
	let {{ parameter.name }} = "{{ parameter.const }}"
{% endfor %}

{% for parameter in dynamicParameters %}
	/// {{ parameter.description }}
	let {{ parameter.name }}: {{ parameter.type }}
{% endfor %}
}
